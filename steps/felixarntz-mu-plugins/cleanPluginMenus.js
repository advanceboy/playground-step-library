customSteps.cleanPluginMenus = function() {
    var steps = [
    {
        "step": "mkdir",
        "path": "wordpress/wp-content/mu-plugins"
    },
    {
        "step": "writeFile",
        "path": "wordpress/wp-content/mu-plugins/clean-plugin-menus.php",
        "data": "<?php\n/**\n * Plugin Name: Clean Plugin Menus\n * Plugin URI: https://github.com/felixarntz/felixarntz-mu-plugins\n * Description: Cleans up top level menu items from plugins in WP Admin.\n * Author: Felix Arntz\n * Author URI: https://felix-arntz.me\n * License: GPLv2 or later\n * License URI: https://www.gnu.org/licenses/old-licenses/gpl-2.0.html\n * Text Domain: felixarntz-mu-plugins\n *\n * @package felixarntz-mu-plugins\n */\n\nnamespace Felix_Arntz\\MU_Plugins;\n\nif ( ! defined( 'ABSPATH' ) ) {\n\texit; // Exit if accessed directly.\n}\n\nrequire_once __DIR__ . '/shared/loader.php';\n\nadd_action(\n\t'admin_menu',\n\tstatic function () {\n\t\t$config     = Shared\\Config::instance();\n\t\t$admin_menu = Shared\\Admin_Menu::instance();\n\n\t\t$migrate_item = function ( $submenu_page, $menu_page, $target_menu ) use ( $config, $admin_menu ) {\n\t\t\tglobal $wp_filter;\n\n\t\t\tstatic $feedback_menu_slug = null;\n\t\t\tstatic $insights_menu_slug = null;\n\n\t\t\tswitch ( $target_menu ) {\n\t\t\t\tcase 'feedback':\n\t\t\t\t\tif ( ! $feedback_menu_slug ) {\n\t\t\t\t\t\t$menu_title = $config->get( 'feedback_menu_title', '' );\n\t\t\t\t\t\tif ( ! $menu_title ) {\n\t\t\t\t\t\t\t$menu_title = __( 'Feedback', 'felixarntz-mu-plugins' );\n\t\t\t\t\t\t}\n\t\t\t\t\t\tadd_menu_page(\n\t\t\t\t\t\t\t$menu_title,\n\t\t\t\t\t\t\t$menu_title,\n\t\t\t\t\t\t\t'read',\n\t\t\t\t\t\t\t'felixarntz-feedback',\n\t\t\t\t\t\t\tstatic function () {},\n\t\t\t\t\t\t\t'dashicons-feedback',\n\t\t\t\t\t\t\t30\n\t\t\t\t\t\t);\n\t\t\t\t\t\t$feedback_menu_slug = 'felixarntz-feedback';\n\t\t\t\t\t}\n\t\t\t\t\t$new_menu_slug = $feedback_menu_slug;\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'insights':\n\t\t\t\t\tif ( ! $insights_menu_slug ) {\n\t\t\t\t\t\t$menu_title = $config->get( 'insights_menu_title', '' );\n\t\t\t\t\t\tif ( ! $menu_title ) {\n\t\t\t\t\t\t\t$menu_title = __( 'Insights', 'felixarntz-mu-plugins' );\n\t\t\t\t\t\t}\n\t\t\t\t\t\tadd_menu_page(\n\t\t\t\t\t\t\t$menu_title,\n\t\t\t\t\t\t\t$menu_title,\n\t\t\t\t\t\t\t'read',\n\t\t\t\t\t\t\t'felixarntz-insights',\n\t\t\t\t\t\t\tstatic function () {},\n\t\t\t\t\t\t\t'dashicons-analytics',\n\t\t\t\t\t\t\t40\n\t\t\t\t\t\t);\n\t\t\t\t\t\t$insights_menu_slug = 'felixarntz-insights';\n\t\t\t\t\t}\n\t\t\t\t\t$new_menu_slug = $insights_menu_slug;\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'appearance':\n\t\t\t\tcase 'themes':\n\t\t\t\t\t$new_menu_slug = 'themes.php';\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'plugins':\n\t\t\t\t\t$new_menu_slug = 'plugins.php';\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'users':\n\t\t\t\t\t$new_menu_slug = 'users.php';\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'tools':\n\t\t\t\t\t$new_menu_slug = 'tools.php';\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'options':\n\t\t\t\tcase 'settings':\n\t\t\t\t\t$new_menu_slug = 'options-general.php';\n\t\t\t\t\tbreak;\n\t\t\t}\n\n\t\t\tif ( ! isset( $new_menu_slug ) ) {\n\t\t\t\treturn false;\n\t\t\t}\n\n\t\t\t$hook_submenu_slug = plugin_basename( $submenu_page[2] );\n\t\t\t$hook_menu_slug    = plugin_basename( $menu_page[2] );\n\t\t\t$old_hookname      = get_plugin_page_hookname( $hook_submenu_slug, $hook_menu_slug );\n\n\t\t\tif ( ! $admin_menu->move_submenu_page( $menu_page[2], $submenu_page[2], $new_menu_slug ) ) {\n\t\t\t\treturn false;\n\t\t\t}\n\n\t\t\t$new_title = sprintf(\n\t\t\t\t/* translators: 1: menu title, 2: submenu title */\n\t\t\t\t__( '%1$s: %2$s', 'felixarntz-mu-plugins' ),\n\t\t\t\ttrim( explode( '<span class=\"update-plugins', $menu_page[0] )[0] ),\n\t\t\t\t$submenu_page[0]\n\t\t\t);\n\t\t\t$admin_menu->update_submenu_page_menu_title( $new_menu_slug, $submenu_page[2], $new_title );\n\t\t\t$admin_menu->update_submenu_page_doc_title( $new_menu_slug, $submenu_page[2], $new_title );\n\n\t\t\t$new_hookname = get_plugin_page_hookname( $hook_submenu_slug, $new_menu_slug );\n\n\t\t\t// Copy old page hook so that links to the admin page work correctly.\n\t\t\tif ( isset( $wp_filter[ $old_hookname ] ) ) {\n\t\t\t\t// phpcs:ignore WordPress.WP.GlobalVariablesOverride.Prohibited\n\t\t\t\t$wp_filter[ $new_hookname ] = $wp_filter[ $old_hookname ];\n\t\t\t}\n\n\t\t\treturn array(\n\t\t\t\t'old_parent'   => $menu_page[2],\n\t\t\t\t'new_parent'   => $new_menu_slug,\n\t\t\t\t'old_hookname' => $old_hookname,\n\t\t\t\t'new_hookname' => $new_hookname,\n\t\t\t);\n\t\t};\n\n\t\t$jetpack_site_id = false;\n\t\tif ( class_exists( 'Automattic\\Jetpack\\Connection\\Manager' ) ) {\n\t\t\t$jetpack_site_id = \\Automattic\\Jetpack\\Connection\\Manager::get_site_id( true );\n\t\t}\n\t\tif ( ! $jetpack_site_id ) {\n\t\t\t$jetpack_site_id = rtrim(\n\t\t\t\tstr_replace(\n\t\t\t\t\t'/',\n\t\t\t\t\t'::',\n\t\t\t\t\tpreg_replace( '#^.*?://#', '', home_url() )\n\t\t\t\t),\n\t\t\t\t':'\n\t\t\t);\n\t\t}\n\t\t$jetpack_subscribers_old = esc_url(\n\t\t\t'https://jetpack.com/redirect/?source=jetpack-menu-calypso-subscribers&site=' . $jetpack_site_id\n\t\t);\n\t\t$jetpack_subscribers_new = esc_url(\n\t\t\t'https://jetpack.com/redirect/?source=jetpack-menu-jetpack-manage-subscribers&site=' . $jetpack_site_id\n\t\t);\n\n\t\t$move_plugin_menus = array_merge(\n\t\t\tarray(\n\t\t\t\t'akismet-key-config'      => 'settings',\n\t\t\t\t'googlesitekit-splash'    => 'insights',\n\t\t\t\t'googlesitekit-dashboard' => 'insights',\n\t\t\t\t'googlesitekit-settings'  => 'settings',\n\t\t\t\t'jetpack'                 => 'insights',\n\t\t\t\t'jetpack#/dashboard'      => 'insights',\n\t\t\t\t'my-jetpack'              => 'settings',\n\t\t\t\t'jetpack#/settings'       => 'settings',\n\t\t\t\t'jetpack-boost'           => 'settings',\n\t\t\t\t'jetpack-search'          => 'hide',\n\t\t\t\t$jetpack_subscribers_old  => 'insights',\n\t\t\t\t$jetpack_subscribers_new  => 'insights',\n\t\t\t\t'wpcf7'                   => 'feedback',\n\t\t\t\t'wpcf7-new'               => 'hide',\n\t\t\t\t'wpcf7-integration'       => 'settings',\n\t\t\t\t'wpseo_dashboard'         => 'hide',\n\t\t\t\t'wpseo_page_settings'     => 'settings',\n\t\t\t\t'wpseo_integrations'      => 'hide',\n\t\t\t\t'wpseo_tools'             => 'tools',\n\t\t\t\t'wpseo_page_academy'      => 'hide',\n\t\t\t\t'wpseo_licenses'          => 'hide',\n\t\t\t\t'wpseo_workouts'          => 'hide',\n\t\t\t\t'wpseo_redirects'         => 'hide',\n\t\t\t\t'wpseo_page_support'      => 'hide',\n\t\t\t),\n\t\t\t$config->get( 'move_plugin_menus', array() )\n\t\t);\n\n\t\t$moved = array();\n\t\tforeach ( $move_plugin_menus as $menu_slug => $target_menu ) {\n\t\t\t$menu_page = $admin_menu->get_menu_page( $menu_slug );\n\t\t\tif ( ! $menu_page ) {\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\t$submenu_pages = $admin_menu->get_submenu_pages( $menu_slug );\n\t\t\tforeach ( $submenu_pages as $submenu_page ) {\n\t\t\t\tif ( isset( $move_plugin_menus[ $submenu_page[2] ] ) ) {\n\t\t\t\t\t// Do not make any change if no target set or explicitly forced to keep.\n\t\t\t\t\tif ( empty( $move_plugin_menus[ $submenu_page[2] ] ) || 'keep' === $move_plugin_menus[ $submenu_page[2] ] ) {\n\t\t\t\t\t\tcontinue;\n\t\t\t\t\t}\n\n\t\t\t\t\t// Simply hide the submenu page if target set to 'hide'.\n\t\t\t\t\tif ( 'hide' === $move_plugin_menus[ $submenu_page[2] ] ) {\n\t\t\t\t\t\t$admin_menu->remove_submenu_page( $menu_page[2], $submenu_page[2] );\n\t\t\t\t\t\tcontinue;\n\t\t\t\t\t}\n\n\t\t\t\t\t// Otherwise, attempt to move to the target menu set.\n\t\t\t\t\t$migration_data = $migrate_item( $submenu_page, $menu_page, $move_plugin_menus[ $submenu_page[2] ] );\n\t\t\t\t\tif ( $migration_data ) {\n\t\t\t\t\t\t$moved[ $submenu_page[2] ]                    = $migration_data;\n\t\t\t\t\t\t$moved[ $submenu_page[2] ]['new_parent_file'] = str_ends_with( $migration_data['new_parent'], '.php' ) ? $migration_data['new_parent'] : 'admin.php';\n\t\t\t\t\t\t$moved[ $submenu_page[2] ]['hash_children']   = array();\n\t\t\t\t\t\tif ( str_contains( $submenu_page[2], '#' ) ) {\n\t\t\t\t\t\t\t$unhashed_slug = explode( '#', $submenu_page[2] )[0];\n\t\t\t\t\t\t\tif ( isset( $moved[ $unhashed_slug ] ) ) {\n\t\t\t\t\t\t\t\tif ( 'admin.php' === $moved[ $submenu_page[2] ]['new_parent_file'] ) {\n\t\t\t\t\t\t\t\t\t$moved[ $unhashed_slug ]['new_parent']      = $moved[ $submenu_page[2] ]['new_parent'];\n\t\t\t\t\t\t\t\t\t$moved[ $unhashed_slug ]['new_parent_file'] = $moved[ $submenu_page[2] ]['new_parent_file'];\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t$moved[ $unhashed_slug ]['hash_children'][] = $submenu_page[2];\n\t\t\t\t\t\t\t\tcontinue;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t$moved[ $unhashed_slug ]                  = $moved[ $submenu_page[2] ];\n\t\t\t\t\t\t\t$moved[ $unhashed_slug ]['hash_children'] = array( $submenu_page[2] );\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tadd_action(\n\t\t\t'admin_init',\n\t\t\tfunction () use ( $moved, $admin_menu ) {\n\t\t\t\tglobal $pagenow, $plugin_page;\n\n\t\t\t\tif ( ! isset( $plugin_page ) || ! isset( $moved[ $plugin_page ] ) ) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\t$current_moved_page = $moved[ $plugin_page ];\n\t\t\t\t$real_page_slug     = $plugin_page;\n\n\t\t\t\t// If there are hashed children, try to find a more specific match within those.\n\t\t\t\tif ( $current_moved_page['hash_children'] ) {\n\t\t\t\t\tforeach ( $current_moved_page['hash_children'] as $submenu_page_slug ) {\n\t\t\t\t\t\tif ( isset( $moved[ $submenu_page_slug ] ) && $pagenow === $moved[ $submenu_page_slug ]['new_parent_file'] ) {\n\t\t\t\t\t\t\t$current_moved_page = $moved[ $submenu_page_slug ];\n\t\t\t\t\t\t\t$real_page_slug     = $submenu_page_slug;\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t// Override the hook suffix global to make sure relevant hooks added based on the original location still fire.\n\t\t\t\tif ( get_plugin_page_hookname( $plugin_page, $pagenow ) === $current_moved_page['new_hookname'] ) {\n\t\t\t\t\tadd_action(\n\t\t\t\t\t\t'load-' . $current_moved_page['new_hookname'],\n\t\t\t\t\t\tfunction () use ( $current_moved_page ) {\n\t\t\t\t\t\t\tglobal $hook_suffix, $title;\n\n\t\t\t\t\t\t\t// phpcs:ignore WordPress.WP.GlobalVariablesOverride.Prohibited\n\t\t\t\t\t\t\t$hook_suffix = $current_moved_page['old_hookname'];\n\t\t\t\t\t\t}\n\t\t\t\t\t);\n\t\t\t\t}\n\n\t\t\t\t// Override further variables if this is a hashed child page.\n\t\t\t\tif ( $real_page_slug !== $plugin_page ) {\n\t\t\t\t\t// Set $title global to prevent it from being null, which can cause a PHP notice.\n\t\t\t\t\t$submenu_page = $admin_menu->get_submenu_page( $current_moved_page['new_parent'], $real_page_slug );\n\t\t\t\t\tif ( $submenu_page ) {\n\t\t\t\t\t\t// phpcs:ignore WordPress.WP.GlobalVariablesOverride.Prohibited\n\t\t\t\t\t\t$GLOBALS['title'] = isset( $submenu_page[3] ) ? $submenu_page[3] : $submenu_page[0];\n\t\t\t\t\t}\n\n\t\t\t\t\t// Override parent and submenu file globals.\n\t\t\t\t\tadd_filter(\n\t\t\t\t\t\t'parent_file',\n\t\t\t\t\t\tfunction () use ( $current_moved_page ) {\n\t\t\t\t\t\t\treturn $current_moved_page['new_parent'];\n\t\t\t\t\t\t}\n\t\t\t\t\t);\n\t\t\t\t\tadd_filter(\n\t\t\t\t\t\t'submenu_file',\n\t\t\t\t\t\tfunction () use ( $real_page_slug ) {\n\t\t\t\t\t\t\treturn $real_page_slug;\n\t\t\t\t\t\t}\n\t\t\t\t\t);\n\t\t\t\t}\n\t\t\t}\n\t\t);\n\t},\n\tPHP_INT_MAX\n);\n"
    },
    {
        "step": "unzip",
        "zipFile": {
            "resource": "url",
            "url": "http://localhost:8089/felixarntz-mu-plugins-shared.zip"
        },
        "extractToPath": "/wordpress/mu-plugins"
    }
];
    return steps;
}
customSteps.cleanPluginMenus.info = "Cleans up top level menu items from plugins in WP Admin.";
