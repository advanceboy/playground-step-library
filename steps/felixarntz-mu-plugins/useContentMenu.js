customSteps.useContentMenu = function() {
    var steps = [
    {
        "step": "mkdir",
        "path": "wordpress/wp-content/mu-plugins/felixarntz-mu-plugins",
        "dedup": true
    },
    {
        "step": "unzip",
        "zipFile": {
            "resource": "url",
            "url": "https://raw.githubusercontent.com/akirk/playground-step-library/main/felixarntz-mu-plugins-shared.zip"
        },
        "extractToPath": "/wordpress/wp-content/mu-plugins",
        "dedup": true
    },
    {
        "step": "writeFile",
        "path": "wordpress/wp-content/mu-plugins/felixarntz-mu-plugins/use-content-menu.php",
        "data": "<?php\n/**\n * Plugin Name: Use Content Menu\n * Plugin URI: https://github.com/felixarntz/felixarntz-mu-plugins\n * Description: Moves all post type admin menus into a single Content menu.\n * Author: Felix Arntz\n * Author URI: https://felix-arntz.me\n * License: GPLv2 or later\n * License URI: https://www.gnu.org/licenses/old-licenses/gpl-2.0.html\n * Text Domain: felixarntz-mu-plugins\n *\n * @package felixarntz-mu-plugins\n */\n\nnamespace Felix_Arntz\\MU_Plugins;\n\nif ( ! defined( 'ABSPATH' ) ) {\n\texit; // Exit if accessed directly.\n}\n\nrequire_once __DIR__ . '/shared/loader.php';\n\nadd_action(\n\t'admin_menu',\n\tstatic function () {\n\t\tglobal $submenu;\n\n\t\t$admin_menu = Shared\\Admin_Menu::instance();\n\n\t\t$posts_menu = $admin_menu->get_menu_page( 'edit.php' );\n\t\tif ( ! $posts_menu ) {\n\t\t\treturn;\n\t\t}\n\n\t\t$menu_tmpl    = 'edit.php?post_type=%s';\n\t\t$add_new_tmpl = 'post-new.php?post_type=%s';\n\t\t$post_types   = array_merge(\n\t\t\tarray( 'page' ),\n\t\t\tget_post_types(\n\t\t\t\tarray(\n\t\t\t\t\t'show_ui'      => true,\n\t\t\t\t\t'_builtin'     => false,\n\t\t\t\t\t'show_in_menu' => true,\n\t\t\t\t)\n\t\t\t)\n\t\t);\n\n\t\t// Check whether there is more than 1 relevant menu to migrate.\n\t\t$eligible_post_types = array_filter(\n\t\t\t$post_types,\n\t\t\tstatic function ( $post_type ) use ( $admin_menu, $menu_tmpl ) {\n\t\t\t\t$menu_file = sprintf( $menu_tmpl, $post_type );\n\t\t\t\treturn $admin_menu->get_menu_page( $menu_file ) ? true : false;\n\t\t\t}\n\t\t);\n\t\tif ( count( $eligible_post_types ) <= 1 ) {\n\t\t\treturn;\n\t\t}\n\n\t\t// Change the Posts menu to a general content menu, and use title \"Posts\" instead of \"All Posts\" for submenu.\n\t\t$admin_menu->update_submenu_page_menu_title( 'edit.php', 'edit.php', $posts_menu[0] );\n\t\t$admin_menu->update_menu_page_menu_title( 'edit.php', __( 'Content', 'default' ) );\n\n\t\t$taxonomies = get_taxonomies(\n\t\t\tarray(\n\t\t\t\t'show_ui'      => true,\n\t\t\t\t'show_in_menu' => true,\n\t\t\t),\n\t\t\t'objects'\n\t\t);\n\t\tforeach ( $eligible_post_types as $post_type ) {\n\t\t\t$menu_file    = sprintf( $menu_tmpl, $post_type );\n\t\t\t$add_new_file = sprintf( $add_new_tmpl, $post_type );\n\n\t\t\t$post_type_menu = $admin_menu->get_menu_page( $menu_file );\n\t\t\tif ( ! $post_type_menu ) {\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\t$post_type_taxonomies = array_filter(\n\t\t\t\t$taxonomies,\n\t\t\t\tfunction ( $taxonomy ) use ( $post_type ) {\n\t\t\t\t\treturn in_array( $post_type, (array) $taxonomy->object_type, true );\n\t\t\t\t}\n\t\t\t);\n\n\t\t\t$expected_num_pages = count( $post_type_taxonomies ) + 1;\n\t\t\tif ( $admin_menu->get_submenu_page( $menu_file, $add_new_file ) ) {\n\t\t\t\t$expected_num_pages++;\n\t\t\t}\n\n\t\t\t// Skip if there are other submenu pages in the post type's menu.\n\t\t\tif ( $admin_menu->get_submenu_page_count( $menu_file ) > $expected_num_pages ) {\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\t// Remove Add New page if present.\n\t\t\t$admin_menu->remove_submenu_page( $menu_file, $add_new_file );\n\n\t\t\t// Rename submenu item to use the overall menu's title (e.g. \"Pages\" instead of \"All Pages\").\n\t\t\t$admin_menu->update_submenu_page_menu_title( $menu_file, $menu_file, $post_type_menu[0] );\n\n\t\t\t// Move all submenu pages to the new Content menu.\n\t\t\t$submenu_page = $admin_menu->get_first_submenu_page( $menu_file );\n\t\t\twhile ( $submenu_page ) {\n\t\t\t\tif ( $admin_menu->move_submenu_page( $menu_file, $submenu_page[2], 'edit.php' ) ) {\n\t\t\t\t\t$submenu_page = $admin_menu->get_first_submenu_page( $menu_file );\n\t\t\t\t} else {\n\t\t\t\t\t$submenu_page = array();\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t// Override the current parent menu file to be the new \"Content\" menu where relevant.\n\t\tadd_filter(\n\t\t\t'parent_file',\n\t\t\tstatic function ( $parent_file ) {\n\t\t\t\tglobal $post_type, $post_type_object;\n\n\t\t\t\tif ( ! isset( $post_type ) ) {\n\t\t\t\t\treturn $parent_file;\n\t\t\t\t}\n\n\t\t\t\tif ( isset( $post_type_object ) && $post_type_object->show_in_menu && true !== $post_type_object->show_in_menu ) {\n\t\t\t\t\t$orig_parent_file = $post_type_object->show_in_menu;\n\t\t\t\t} else {\n\t\t\t\t\t$orig_parent_file = \"edit.php?post_type=$post_type\";\n\t\t\t\t}\n\n\t\t\t\tif ( $parent_file === $orig_parent_file ) {\n\t\t\t\t\treturn 'edit.php';\n\t\t\t\t}\n\n\t\t\t\treturn $parent_file;\n\t\t\t}\n\t\t);\n\n\t\t/**\n\t\t * Depending on the configuration, either sort the Content submenu items so that all post types come first,\n\t\t * before any taxonomies, or alternatively keep the original order and visually indent the taxonomy entries.\n\t\t */\n\t\t$config = Shared\\Config::instance();\n\t\tif ( ! $config->get( 'indent_content_menu_taxonomies', false ) ) {\n\t\t\t$taxonomy_pages = array();\n\t\t\tforeach ( $submenu['edit.php'] as $index => $submenu_page ) {\n\t\t\t\tif ( str_starts_with( $submenu_page[2], 'edit-tags.php' ) ) {\n\t\t\t\t\t$taxonomy_pages[] = $submenu_page;\n\t\t\t\t\tunset( $submenu['edit.php'][ $index ] );\n\t\t\t\t}\n\t\t\t}\n\t\t\tforeach ( $taxonomy_pages as $taxonomy_page ) {\n\t\t\t\t// phpcs:ignore WordPress.WP.GlobalVariablesOverride.Prohibited\n\t\t\t\t$submenu['edit.php'][] = $taxonomy_page;\n\t\t\t}\n\t\t\treturn;\n\t\t}\n\n\t\tadd_action(\n\t\t\t'admin_head',\n\t\t\tstatic function () {\n\t\t\t\t?>\n\t\t\t\t<style type=\"text/css\">\n\t\t\t\t\t.wp-submenu a[href^=\"edit-tags.php\"] {\n\t\t\t\t\t\tpadding-left: 20px !important;\n\t\t\t\t\t}\n\t\t\t\t</style>\n\t\t\t\t<?php\n\t\t\t}\n\t\t);\n\t},\n\tPHP_INT_MAX\n);\n"
    }
];
    return steps;
}
customSteps.useContentMenu.felixArntzMuPlugins = true;
customSteps.useContentMenu.info = "Moves all post type admin menus into a single Content menu.";
